kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
  - name: build
    image: debian:stable-slim
    commands:
      - apt -qq update
      - |
        apt -qq install -y -qq --no-install-recommends \
          git wget curl xz-utils ca-certificates cmake git
      # Fetch and install the Zephyr SDK
      - |
        mkdir -p drone
        curl -L -s https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.8/zephyr-sdk-0.16.8_linux-x86_64_minimal.tar.xz | \
          tar xJf - -C drone
        ./drone/zephyr-sdk-*/setup.sh -t riscv64-zephyr-elf -c
      # Install the build dependencies
      - |
        apt -qq install -y -qq --no-install-recommends \
          git cmake ninja-build gperf \
          ccache dfu-util device-tree-compiler wget curl \
          python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
          make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1 python3-virtualenv
      - virtualenv drone/venv
      # Install west and the modules
      - |
        . drone/venv/bin/activate
        pip3 install west
        pip3 install -r scripts/requirements.txt
        west init -l . || true
        west config --global update.narrow true
        west update --path-cache $PWD/drone/cache -o=--depth=1
      # Build
      - |
        export ZEPHYR_SDK_INSTALL_DIR=$PWD/drone/zephyr-sdk-*
        export ZEPHYR_BASE=$PWD
        export ZEPHYR_TOOLCHAIN_VARIANT=zephyr
        west build -p -b wch_ch32v003evt samples/basic/blinky
        west build -p -b wch_ch32v003evt samples/drivers/adc/adc_dt
